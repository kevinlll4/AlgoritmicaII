/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Formularios;

import Controladores.Codigo;
import Controladores.limpiar;
import Datos.DatosCliente;
import Datos.DatosCuenta;
import Negocios.ngcRegistrarCliente;
import Negocios.ngcRegistrarCuenta;
import java.io.IOException;
import java.sql.Array;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import Modelos.Cliente;
import Modelos.Cuenta;
import Modelos.CuentaAhorros;
import Modelos.CuentaCorriente;
import Modelos.vectorGenericosCuentas;
import Modelos.vectorPersonas;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author DURAN
 */
public class frmConsultarCuenta extends javax.swing.JFrame {

    /**
     * Creates new form frmConsultarCuenta
     */
    public frmConsultarCuenta() {
        initComponents();
        this.setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton2 = new javax.swing.JButton();
        btnEditar = new javax.swing.JButton();
        btnSalir = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable3 = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        btnRegistrar = new javax.swing.JButton();
        jcmbTipo = new javax.swing.JComboBox();
        jLabel5 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtSaldo = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtCliente = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        txtPassword1 = new javax.swing.JPasswordField();
        txtIdCliente1 = new javax.swing.JTextField();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();

        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jButton2.setFont(new java.awt.Font("IncisedBlackWide", 3, 24)); // NOI18N
        jButton2.setText("Limpiar");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(-180, -140, 110, 290));
        jButton2.getAccessibleContext().setAccessibleParent(this);

        btnEditar.setText("Editar");
        btnEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarActionPerformed(evt);
            }
        });
        getContentPane().add(btnEditar, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 220, 80, -1));
        btnEditar.getAccessibleContext().setAccessibleParent(this);

        btnSalir.setFont(new java.awt.Font("IncisedBlackWide", 3, 24)); // NOI18N
        btnSalir.setText("Salir");
        btnSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalirActionPerformed(evt);
            }
        });
        getContentPane().add(btnSalir, new org.netbeans.lib.awtextra.AbsoluteConstraints(-180, -90, 100, 290));
        btnSalir.getAccessibleContext().setAccessibleParent(this);

        jButton3.setText("BuscarTodos");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 160, -1, -1));
        jButton3.getAccessibleContext().setAccessibleParent(this);

        jTable3.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "CodCliente", "Cliente", "CodCuenta", "Contraseña", "Saldo", "Tipo"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Float.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, true, false, true, true, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(jTable3);
        jTable3.getAccessibleContext().setAccessibleParent(this);

        getContentPane().add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 420, 560, 93));

        jButton1.setText("BuscarxCliente");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 370, -1, -1));
        jButton1.getAccessibleContext().setAccessibleParent(this);

        btnRegistrar.setText("Registrar");
        btnRegistrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegistrarActionPerformed(evt);
            }
        });
        getContentPane().add(btnRegistrar, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 310, -1, -1));
        btnRegistrar.getAccessibleContext().setAccessibleParent(this);

        jcmbTipo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Corriente", "Ahorros" }));
        getContentPane().add(jcmbTipo, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 260, -1, -1));
        jcmbTipo.getAccessibleContext().setAccessibleParent(this);

        jLabel5.setBackground(new java.awt.Color(255, 252, 250));
        jLabel5.setFont(new java.awt.Font("Monospaced", 1, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(235, 233, 233));
        jLabel5.setText("Tipo");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 270, -1, -1));
        jLabel5.getAccessibleContext().setAccessibleParent(this);

        jLabel4.setBackground(new java.awt.Color(255, 252, 250));
        jLabel4.setFont(new java.awt.Font("Monospaced", 1, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(235, 233, 233));
        jLabel4.setText("Saldo");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 170, -1, -1));
        jLabel4.getAccessibleContext().setAccessibleParent(this);

        txtSaldo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSaldoActionPerformed(evt);
            }
        });
        getContentPane().add(txtSaldo, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 170, 100, -1));
        txtSaldo.getAccessibleContext().setAccessibleParent(jPanel1);

        jLabel3.setBackground(new java.awt.Color(255, 252, 250));
        jLabel3.setFont(new java.awt.Font("Monospaced", 1, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(235, 233, 233));
        jLabel3.setText("Contraseña");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 220, -1, -1));
        jLabel3.getAccessibleContext().setAccessibleParent(this);

        jLabel2.setBackground(new java.awt.Color(255, 252, 250));
        jLabel2.setFont(new java.awt.Font("Monospaced", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(235, 233, 233));
        jLabel2.setText("Cliente");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 120, 60, -1));
        jLabel2.getAccessibleContext().setAccessibleParent(this);

        getContentPane().add(txtCliente, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 120, 140, -1));
        txtCliente.getAccessibleContext().setAccessibleParent(jPanel1);

        jLabel1.setFont(new java.awt.Font("IncisedBlackWide", 3, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(246, 246, 246));
        jLabel1.setText("Administrar Cuentas");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 40, 340, 25));
        jLabel1.getAccessibleContext().setAccessibleParent(this);

        getContentPane().add(txtPassword1, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 210, 90, -1));
        txtPassword1.getAccessibleContext().setAccessibleParent(jPanel1);

        getContentPane().add(txtIdCliente1, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 370, 140, -1));

        jButton4.setForeground(new java.awt.Color(86, 83, 83));
        jButton4.setText("Regresar");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton4, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 260, 80, -1));

        jButton5.setText("Limpiar");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton5, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 300, -1, -1));

        jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/BBBBBBBB.jpg"))); // NOI18N
        jLabel6.setText("LImpiar");
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(-10, 0, 620, 540));
        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 100, 280, 250));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        limpiar.limpiarTabla(jTable3);
    
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed

    private void btnRegistrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegistrarActionPerformed
        try {
            String codCF = " ";
         

            String idCliente = txtCliente.getText();
            Object e = jcmbTipo.getSelectedItem();
            char[] charC = txtPassword1.getPassword();
            String contra = new String(charC);
            String cuenta = String.valueOf(e);
            float saldo=Float.parseFloat(txtSaldo.getText());
            ArrayList<Cliente> cliente = DatosCliente.getAllF();
            ArrayList<Cuenta> cuent = DatosCuenta.getAllF();
            String Nombre = " ";
            boolean encontrado = false;
            for (int i = 0; i < cliente.size(); i++) {
                if (cliente.get(i).getId().equals(idCliente)) {
                    encontrado = true;
                    Nombre = cliente.get(i).getNombre();
                }
            }
            if (encontrado) {
                codCF = Codigo.CodigoCuentaF(Nombre);
                Cuenta cta;

                if (cuenta.equals("Corriente")) {

                    cta = new CuentaCorriente(codCF, idCliente, contra,saldo, cuenta);

                } else {

                    cta = new CuentaAhorros(codCF, idCliente, contra, saldo, cuenta);
                }
                cuent.add(cta);
                try {

                    vectorGenericosCuentas ve = new vectorGenericosCuentas();
                    ve.crearArchivoC();
                    for (int i = 0; i < cuent.size(); i++) {

                        ve.añadir("Cuentas.obj", cuent.get(i));
                    }
                } catch (IOException ex) {
                    System.out.println(ex.getMessage());

                }
            } else {
                JOptionPane.showMessageDialog(rootPane, "No se ha encontrado al cliente");
            }// TODO add your handling code here:
        } catch (IOException ex) {
            Logger.getLogger(frmConsultarCuenta.class.getName()).log(Level.SEVERE, null, ex);

        } catch (ClassNotFoundException ex) {
            Logger.getLogger(frmConsultarCuenta.class.getName()).log(Level.SEVERE, null, ex);
        }        // TODO add your handling code here:
    }//GEN-LAST:event_btnRegistrarActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        try {
            // TODO add your handling code here:

            limpiar.limpiarTabla(jTable3);
            ArrayList<Cuenta> cuenta = DatosCuenta.getAllF();
            ArrayList<Cliente> cliente = DatosCliente.getAllF();
            if (cliente == null) {

                JOptionPane.showMessageDialog(rootPane, "No hay clientes");
            }
            if (cuenta == null) {

                JOptionPane.showMessageDialog(rootPane, "No hay cuentas");
            } else {
                DefaultTableModel modeloTabla = (DefaultTableModel) jTable3.getModel();
                Cliente aux = null;
                for (int i = 0; i < cliente.size(); i++) {
                    for (int j = 0; j < cuenta.size(); j++) {
                        try{
                        if (cliente.get(i).getId().equals(cuenta.get(j).getIdcliente())) {
                            Object[] DatosFila = {
                                cliente.get(i).getId(),
                                cliente.get(i).getNombre(),
                                cuenta.get(j).getCodigo(),
                                cuenta.get(j).getContraseña(),
                                cuenta.get(j).getSaldo(),
                                cuenta.get(j).getTipo()
                            };
                            modeloTabla.addRow(DatosFila);

                        }
                        }catch(IndexOutOfBoundsException e){
                            System.out.println("Se ha producido un error al tratar de ingresar a un indice no valido");
                        }
                    }

                }

                /* for (Cuenta ck : cuenta) {
                    Object[] DatosFila = {
                        ck.getId(),
                        ck.getNombre(),
                        ck.getEdad(),
                        ck.getDireccion(),
                        ck.getFecha(),};
                    modeloTabla.addRow(DatosFila);

                }*/
            }

        } catch (IOException ex) {
            Logger.getLogger(frmAdministrarCuenta.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(frmAdministrarCuenta.class.getName()).log(Level.SEVERE, null, ex);
        }        //
    }//GEN-LAST:event_jButton3ActionPerformed

    private void btnSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalirActionPerformed
        dispose();        // TODO add your handling code here:
    }//GEN-LAST:event_btnSalirActionPerformed

    private void btnEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarActionPerformed
        int indice = jTable3.getSelectedRow();
        try {
            ArrayList<Cliente> cliente = DatosCliente.getAllF();
            ArrayList<Cuenta> cuentas = DatosCuenta.getAllF();
            String codCliente = (String) jTable3.getValueAt(indice, 0);
            String codCuenta = (String) jTable3.getValueAt(indice, 2);
            for (int i = 0; i < cliente.size(); i++) {

                for (int j = 0; j < cuentas.size(); j++) {
                    if (cliente.get(i).getId().equals(codCliente) && cuentas.get(i).getCodigo().equals(codCuenta)) {

                        cliente.get(i).setNombre((String) jTable3.getValueAt(indice, 1));
                        cuentas.get(i).setContraseña((String) jTable3.getValueAt(indice, 3));
                        cuentas.get(i).setSaldo((float) jTable3.getValueAt(indice, 4));
                        cuentas.get(i).setTipo((String) jTable3.getValueAt(indice, 5));

                    }
                }
            }
            vectorPersonas x = new vectorPersonas();
            x.crearArchivoC();
            vectorGenericosCuentas y = new vectorGenericosCuentas();
            y.crearArchivoC();

            for (int i = 0; i < cliente.size(); i++) {
                if (cliente.get(i).getId().equals(codCliente) && cuentas.get(i).getCodigo().equals(codCuenta)) {
                for (int j = 0; j < cuentas.size(); j++) {
                x.añadir("Cuentas.obj", cuentas.get(j));
                 x.añadir("Clientes.obj", cliente.get(i));
            }}
               
            }
            

            JOptionPane.showMessageDialog(rootPane, "Campo editado con exito");

        } catch (IOException ex) {
            Logger.getLogger(frmAdministrarCuenta.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(frmAdministrarCuenta.class.getName()).log(Level.SEVERE, null, ex);
        }        // TODO add your handling code here:
    }//GEN-LAST:event_btnEditarActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        try {
            // TODO add your handling code here:

            limpiar.limpiarTabla(jTable3);
            ArrayList<Cuenta> cuenta = DatosCuenta.getAllF();
            ArrayList<Cliente> cliente = DatosCliente.getAllF();
            if (cliente == null) {

                JOptionPane.showMessageDialog(rootPane, "No hay clientes");
            }
            if (cuenta == null) {

                JOptionPane.showMessageDialog(rootPane, "No hay cuentas");
            } else {
                DefaultTableModel modeloTabla = (DefaultTableModel) jTable3.getModel();
                Cliente aux = null;
                for (int i = 0; i < cliente.size(); i++) {
                    if (cliente.get(i).getId().equals(txtIdCliente1.getText())) {
                        aux = cliente.get(i);

                    }
                }
                if (aux != null) {

                    for (int j = 0; j < cuenta.size(); j++) {

                        if (aux.getId().equals(cuenta.get(j).getIdcliente())) {
                            Object[] DatosFila = {
                                aux.getId(),
                                aux.getNombre(),
                                cuenta.get(j).getCodigo(),
                                cuenta.get(j).getContraseña(),
                                cuenta.get(j).getSaldo(),
                                cuenta.get(j).getTipo()
                            };
                            modeloTabla.addRow(DatosFila);

                        }

                    }
                } else {

                    JOptionPane.showMessageDialog(rootPane, "No Existe ese id");
                }
                /* for (Cuenta ck : cuenta) {
                    Object[] DatosFila = {
                        ck.getId(),
                        ck.getNombre(),
                        ck.getEdad(),
                        ck.getDireccion(),
                        ck.getFecha(),};
                    modeloTabla.addRow(DatosFila);

                }*/
            }

        } catch (IOException ex) {
            Logger.getLogger(frmAdministrarCuenta.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(frmAdministrarCuenta.class.getName()).log(Level.SEVERE, null, ex);
        }        // TODO add your
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
dispose();
Principal y=new Principal();
y.show();
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
Controladores.limpiar.limpiarTabla(jTable3);
Controladores.limpiar.limpiarTxt(jPanel1);
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton5ActionPerformed

    private void txtSaldoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSaldoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSaldoActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnEditar;
    private javax.swing.JButton btnRegistrar;
    private javax.swing.JButton btnSalir;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTable3;
    private javax.swing.JComboBox jcmbTipo;
    private javax.swing.JTextField txtCliente;
    private javax.swing.JTextField txtIdCliente1;
    private javax.swing.JPasswordField txtPassword1;
    private javax.swing.JTextField txtSaldo;
    // End of variables declaration//GEN-END:variables
}
